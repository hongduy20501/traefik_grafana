version: "3.3"

services:
  dsock:
    image: harbor.elofun.net/core/nginx-proxy:0.0.1
    networks:
      - sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CONF: |
        include /etc/nginx/modules-enabled/*.conf;
        user root;
        worker_processes auto;
        events {
          worker_connections 1024;
          multi_accept on;
        }
        stream {
          server {
            listen 9000;
            proxy_pass unix:/var/run/docker.sock;
          }
        }
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
  traefik:
    image: traefik
    hostname: "{{ .Node.Hostname }}"
    command:
      - --log.level=INFO
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker
      - --providers.docker.endpoint=tcp://dsock:9000
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmMode=true
      - --providers.docker.network=traefik_traefik_public
      - --api
      - --api.dashboard=true
      - --api.insecure=true
      - --accesslog
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --providers.file.filename=/data/certs.yml
      - --providers.file.watch=true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - traefik_public
      - sock
    volumes:
      - /home/duy/duy/config/traefik:/data
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.traefik.rule=Host(`traefik.learndevops.id.vn`)
        - traefik.http.routers.traefik.service=traefik
        - traefik.http.services.traefik.loadbalancer.server.port=8080
        - traefik.http.routers.traefik.entrypoints=https
        #- traefik.http.routers.traefik.entrypoints=web
        - traefik.http.routers.traefik.tls
        #- traefik.http.routers.traefik.tls.certresolver=myresolver
networks:
  traefik_public:
    attachable: true
  sock:
